{"ast":null,"code":"var _jsxFileName = \"/home/ravina/Desktop/React/myApp/src/Demo.js\";\nimport React from 'react';\n\nclass Demo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.update_roll = () => this.setState(state => ({\n      roll: state.roll + 1\n    }));\n\n    this.state = {\n      \"roll\": 101\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"twinkle\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"roll number of twinkle\", this.state.roll), React.createElement(\"button\", {\n      onClick: this.update_roll,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \" roll number\"));\n  }\n\n}\n\nexport default Demo;","map":{"version":3,"sources":["/home/ravina/Desktop/React/myApp/src/Demo.js"],"names":["React","Demo","Component","constructor","props","update_roll","setState","state","roll","componentDidMount","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAClB,UAAMA,KAAN;;AADkB,SAKlBC,WALkB,GAKJ,MACZ,KAAKC,QAAL,CAAeC,KAAD,KACZ;AAACC,MAAAA,IAAI,EAACD,KAAK,CAACC,IAAN,GAAW;AAAjB,KADY,CAAd,CANgB;;AAElB,SAAKD,KAAL,GAAW;AAAC,cAAO;AAAR,KAAX;AAEC;;AAMDE,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;;AACCC,EAAAA,MAAM,GAAE;AACJ,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAA2B,KAAKL,KAAL,CAAWC,IAAtC,CADF,EAEE;AAAQ,MAAA,OAAO,EAAE,KAAKH,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,CADF;AAQH;;AAvB6B;;AA2BlC,eAAeJ,IAAf","sourcesContent":["import React from 'react';\n\nclass Demo extends React.Component{\n  constructor(props){\n  super(props);\n  this.state={\"roll\":101}\n\n  }\n  update_roll = () => (\n    this.setState((state)=> (\n      {roll:state.roll+1}\n  ))\n  )\n  componentDidMount(){\n    console.log(\"twinkle\");\n  }\n    render(){\n        return(\n          <div>\n            <h1>roll number of twinkle{this.state.roll}</h1>\n            <button onClick={this.update_roll}> roll number</button>\n            </div>\n            \n            )\n        \n    }\n}\n\n\nexport default Demo;"]},"metadata":{},"sourceType":"module"}